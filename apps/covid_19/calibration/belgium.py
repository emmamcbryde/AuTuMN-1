from apps.covid_19.calibration import base
from autumn.constants import Region
from apps.covid_19.mixing_optimisation.utils import (
    get_prior_distributions_for_opti,
    get_target_outputs_for_opti,
    get_weekly_summed_targets,
)


country = Region.BELGIUM

PAR_PRIORS = get_prior_distributions_for_opti()
# TARGET_OUTPUTS = get_target_outputs_for_opti(country, data_start_time=50, update_jh_data=False)
TARGET_OUTPUTS = [{'output_key': 'notifications', 'years': [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], 'values': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 6, 5, 10, 27, 59, 60, 31, 39, 28, 47, 0, 245, 130, 197, 172, 185, 243, 309, 462, 558, 586, 342, 526, 668, 1298, 1049, 1850, 1702, 1063, 876, 1189, 1384, 1422, 1661, 1260, 1123, 1380, 1209, 1580, 1684, 1351, 1629, 942, 530, 2454, 1236, 1329, 1045, 1313, 1487, 973, 933, 908, 1496, 1032, 809, 553, 647, 525, 660, 513, 485, 389, 361, 242, 272, 639, 591, 585, 485, 368, 330, 202, 307, 356, 345, 291, 279, 232, 192, 252, 276, 299, 282, 250, 113, 137, 257, 212, 125, 195, 136, 98, 70, 82, 140, 165, 154, 122, 89, 132, 142, 108, 99, 111, 71, 55, 89, 104, 128, 74, 0, 0, 260, 88, 109, 99, 103, 86, 66, 66, 82, 89, 129, 111], 'loglikelihood_distri': 'negative_binomial'}, {'output_key': 'infection_deathsXall', 'years': [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], 'values': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 1, 5, 4, 7, 16, 30, 8, 13, 34, 56, 42, 69, 64, 78, 82, 192, 123, 183, 132, 140, 164, 185, 403, 205, 283, 496, 327, 254, 303, 254, 283, 417, 306, 290, 230, 145, 170, 264, 228, 189, 238, 177, 113, 124, 170, 93, 109, 62, 79, 80, 92, 323, 76, 106, 60, 75, 51, 54, 82, 60, 56, 46, 47, 28, 28, 42, 36, 26, 25, 43, 32, 22, 30, 24, 42, 23, 14, 19, 19, 17, 26, 18, 14, 15, 11, 13, 10, 7, 10, 4, 5, 6, 2, 12, 8, 12, 1, 0, 0, 17, 9, 4, 5, 1, 0, 0, 15, 7, 7, 4, 6], 'loglikelihood_distri': 'negative_binomial'}]

# Use weekly counts
for target in TARGET_OUTPUTS:
    target['years'], target['values'] = get_weekly_summed_targets(target['years'], target['values'])

MULTIPLIERS = {}


def run_calibration_chain(max_seconds: int, run_id: int):
    base.run_calibration_chain(
        max_seconds, run_id, country, PAR_PRIORS, TARGET_OUTPUTS, mode="autumn_mcmc",
    )


if __name__ == "__main__":
    for i in range(len(TARGET_OUTPUTS)):
        print(TARGET_OUTPUTS[i]['output_key'])
        print(TARGET_OUTPUTS[i]['years'])
        print([[v] for v in TARGET_OUTPUTS[i]['values']])
        print()

    run_calibration_chain(
        30, 1
    )  # first argument only relevant for autumn_mcmc mode (time limit in seconds)
