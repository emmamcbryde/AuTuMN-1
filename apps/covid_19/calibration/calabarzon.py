from autumn.constants import Region
from apps.covid_19.calibration import base


def run_calibration_chain(max_seconds: int, run_id: int):
    base.run_calibration_chain(
        max_seconds, run_id, Region.CALABARZON, PAR_PRIORS, TARGET_OUTPUTS, mode="autumn_mcmc", _multipliers=MULTIPLIERS
    )

MULTIPLIERS = {
    "prevXlateXclinical_icuXamong": 16057300.0
}  # to get absolute pop size instead of proportion


PAR_PRIORS = [
    {"param_name": "contact_rate", "distribution": "uniform", "distri_params": [0.010, 0.05],},
    {"param_name": "start_time", "distribution": "uniform", "distri_params": [0.0, 40.0],},
    # Add extra params for negative binomial likelihood
    {
        "param_name": "infection_deathsXall_dispersion_param",
        "distribution": "uniform",
        "distri_params": [0.1, 5.0],
    },
    {
        "param_name": "notifications_dispersion_param",
        "distribution": "uniform",
        "distri_params": [0.1, 5.0],
    },
    {
        "param_name": "prevXlateXclinical_icuXamong_dispersion_param",
        "distribution": "uniform",
        "distri_params": [0.1, 5.0],
    },
    {
        "param_name": "compartment_periods_calculated.incubation.total_period",
        "distribution": "gamma",
        "distri_mean": 5.0,
        "distri_ci": [4.4, 5.6],
    },
    {
        "param_name": "compartment_periods_calculated.total_infectious.total_period",
        "distribution": "gamma",
        "distri_mean": 7.0,
        "distri_ci": [4.5, 9.5],
    },
    # parameters to derive age-specific IFRs
    {
        "param_name": "ifr_double_exp_model_params.k",
        "distribution": "uniform",
        "distri_params": [6., 14.],
    },
    {
        "param_name": "ifr_double_exp_model_params.last_representative_age",
        "distribution": "uniform",
        "distri_params": [75., 85.],
    },
]

# death data:
death_times = [
     71,
     72,
     73,
     74,
     75,
     76,
     77,
     80,
     81,
     82,
     83,
     84,
     85,
     86,
     87,
     88,
     89,
     90,
     91,
     92,
     93,
     94,
     95,
     96,
     97,
     98,
     99,
    100,
    101,
    102,
    103,
    104,
    105,
    106,
    107,
    108,
    109,
    110,
    111,
    113,
    114,
    116,
    119,
    121,
    124,
    125,
    127,
    130,
    132,
    133,
    134,
    136,
    137,
    140,
    144,
    152,
    153,
    156,
    165,
]

death_values = [
      1,
      1,
      1,
      1,
      1,
      1,
      2,
      1,
      1,
      1,
      5,
      3,
      4,
      2,
      3,
      2,
      5,
      7,
      4,
      3,
      4,
      4,
      6,
      7,
      2,
      1,
      1,
      3,
      3,
      3,
      1,
      1,
      1,
      2,
      1,
      2,
      1,
      2,
      2,
      2,
      2,
      1,
      1,
      1,
      2,
      3,
      3,
      2,
      1,
      1,
      1,
      1,
      1,
      1,
      2,
      1,
      1,
      1,
      1,
]

# notification data:
notification_times = [
     43,
     44,
     51,
     53,
     61,
     62,
     65,
     66,
     67,
     68,
     69,
     70,
     71,
     72,
     73,
     74,
     75,
     76,
     77,
     78,
     79,
     80,
     81,
     82,
     83,
     84,
     85,
     86,
     87,
     88,
     89,
     90,
     91,
     92,
     93,
     94,
     95,
     96,
     97,
     98,
     99,
    100,
    101,
    102,
    103,
    104,
    105,
    106,
    107,
    108,
    109,
    110,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    120,
    121,
    122,
    123,
    124,
    125,
    126,
    127,
    128,
    129,
    130,
    131,
    132,
    133,
    134,
    135,
    136,
    137,
    138,
    139,
    140,
    141,
    142,
    143,
    144,
    145,
    146,
    147,
    148,
    149,
    150,
    151,
    152,
    153,
    154,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    162,
    163,
    164,
    165,
    166,
    168,
]

notification_values = [
       1,
       1,
       1,
       1,
       1,
       1,
       1,
       2,
       1,
       3,
       5,
       4,
       6,
       9,
      12,
       9,
      11,
      17,
      15,
      21,
      29,
      28,
      32,
      20,
      30,
      29,
      27,
      38,
      26,
      22,
      38,
      37,
      30,
      29,
      46,
      40,
      29,
      37,
      60,
      35,
      33,
      24,
      52,
      40,
      37,
      24,
      22,
      23,
      28,
      27,
      29,
      11,
      12,
      20,
      14,
      16,
      12,
      13,
       6,
      25,
      20,
      20,
       7,
      14,
       9,
      19,
       7,
       9,
      16,
      21,
      12,
       9,
       7,
      23,
      26,
       6,
      15,
      13,
      12,
      41,
      18,
      22,
      24,
      67,
      41,
      24,
      29,
       7,
      21,
      14,
       3,
      34,
      20,
      34,
      17,
      29,
       9,
      17,
      31,
      10,
      14,
      18,
      19,
      13,
      37,
      27,
      53,
      58,
       1,
]

# ICU data:
icu_times = [
    146,
    147,
    148,
    149,
    150,
    151,
    152,
    153,
    154,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    162,
    163,
    164,
    165,
    166,
    167,
    168,
    169,
    170,
    171,
    172,
    173,
    174,
    175,
    176,
]

icu_values = [
      58,
      65,
      48,
      47,
      63,
      60,
      62,
      62,
      58,
      51,
      60,
      56,
      45,
      51,
      47,
      31,
      39,
      44,
      32,
      52,
      45,
      54,
      66,
      57,
      53,
      51,
      42,
      48,
      43,
      59,
      67,
]

TARGET_OUTPUTS = [
    {
        "output_key": "infection_deathsXall",
        "years": death_times,
        "values": death_values,
        "loglikelihood_distri": "negative_binomial",
    },
    {
        "output_key": "notifications",
        "years": notification_times,
        "values": notification_values,
        "loglikelihood_distri": "negative_binomial",
    },
    {
        "output_key": "prevXlateXclinical_icuXamong",
        "years": icu_times,
        "values": icu_values,
        "loglikelihood_distri": "negative_binomial",
    },
]
