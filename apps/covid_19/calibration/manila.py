from autumn.constants import Region
from apps.covid_19.calibration import base


def run_calibration_chain(max_seconds: int, run_id: int):
    base.run_calibration_chain(
        max_seconds, run_id, Region.MANILA, PAR_PRIORS, TARGET_OUTPUTS, mode="autumn_mcmc",
    )


PAR_PRIORS = [
    {"param_name": "contact_rate", "distribution": "uniform", "distri_params": [0.010, 0.05],},
    {"param_name": "start_time", "distribution": "uniform", "distri_params": [0.0, 40.0],},
    # Add extra params for negative binomial likelihood
    {
        "param_name": "infection_deathsXall_dispersion_param",
        "distribution": "uniform",
        "distri_params": [0.1, 5.0],
    },
    {
        "param_name": "notifications_dispersion_param",
        "distribution": "uniform",
        "distri_params": [0.1, 5.0],
    },
    {
        "param_name": "prevXlateXclinical_icuXamong_dispersion_param",
        "distribution": "uniform",
        "distri_params": [0.1, 5.0],
    },
    {
        "param_name": "compartment_periods_calculated.incubation.total_period",
        "distribution": "gamma",
        "distri_mean": 5.0,
        "distri_ci": [4.4, 5.6],
    },
    {
        "param_name": "compartment_periods_calculated.total_infectious.total_period",
        "distribution": "gamma",
        "distri_mean": 7.0,
        "distri_ci": [4.5, 9.5],
    },
    # parameters to derive age-specific IFRs
    {
        "param_name": "ifr_double_exp_model_params.k",
        "distribution": "uniform",
        "distri_params": [8., 16.],
    },
    {
        "param_name": "ifr_double_exp_model_params.last_representative_age",
        "distribution": "uniform",
        "distri_params": [75., 85.],
    },
]

# death data:
#death_times = []
#death_values = []

# notification data:
notification_times = [
41,
44,
48,
56,
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
]

notification_values = [
1,
1,
1,
1,
3,
2,
2,
5,
8,
13,
13,
9,
15,
32,
39,
51,
41,
81,
102,
96,
108,
107,
92,
116,
123,
114,
130,
196,
133,
162,
203,
134,
114,
168,
134,
130,
168,
129,
135,
121,
151,
194,
174,
174,
178,
171,
138,
127,
120,
106,
136,
158,
90,
133,
150,
149,
155,
133,
119,
82,
102,
136,
169,
181,
112,
90,
103,
82,
165,
147,
146,
153,
125,
112,
144,
147,
170,
149,
116,
103,
100,
191,
160,
243,
239,
290,
495,
308,
221,
201,
142,
234,
224,
76,
257,
137,
276,
189,
222,
124,
253,
289,
260,
170,
169,
196,
178,
328,
277,
265,
182,
372,
253,
444,
382,
334,
393,
557,
13,
6,
3,
2,
]

# ICU data:
#icu_times = []
#icu_values = []

TARGET_OUTPUTS = [
#    {
 #       "output_key": "infection_deathsXall",
  #      "years": death_times,
   #     "values": death_values,
    #    "loglikelihood_distri": "negative_binomial",
    #},
    {
        "output_key": "notifications",
        "years": notification_times,
        "values": notification_values,
        "loglikelihood_distri": "negative_binomial",
    },
    #{
     #   "output_key": "prevXlateXclinical_icuXamong",
      #  "years": icu_times,
       # "values": icu_values,
        #"loglikelihood_distri": "negative_binomial",
    #},
]
