from autumn.constants import Region
from apps.covid_19.calibration import base


def run_calibration_chain(max_seconds: int, run_id: int):
    base.run_calibration_chain(
        max_seconds, run_id, Region.MANILA, PAR_PRIORS, TARGET_OUTPUTS, mode="autumn_mcmc",
    )


PAR_PRIORS = [
    {"param_name": "contact_rate", "distribution": "uniform", "distri_params": [0.010, 0.05],},
    {"param_name": "start_time", "distribution": "uniform", "distri_params": [0.0, 40.0],},
    # Add extra params for negative binomial likelihood
    {
        "param_name": "infection_deathsXall_dispersion_param",
        "distribution": "uniform",
        "distri_params": [0.1, 5.0],
    },
    {
        "param_name": "compartment_periods_calculated.incubation.total_period",
        "distribution": "gamma",
        "distri_mean": 5.0,
        "distri_ci": [4.4, 5.6],
    },
    {
        "param_name": "compartment_periods_calculated.total_infectious.total_period",
        "distribution": "gamma",
        "distri_mean": 7.0,
        "distri_ci": [4.5, 9.5],
    },
    # parameters to derive age-specific IFRs
    {
        "param_name": "ifr_double_exp_model_params.k",
        "distribution": "uniform",
        "distri_params": [6., 14.],
    },
    {
        "param_name": "ifr_double_exp_model_params.last_representative_age",
        "distribution": "uniform",
        "distri_params": [75., 85.],
    },
]

# death data:
death_times = [
     71,
     72,
     73,
     74,
     75,
     76,
     77,
     78,
     79,
     80,
     81,
     82,
     83,
     84,
     85,
     86,
     87,
     88,
     89,
     90,
     91,
     92,
     93,
     94,
     95,
     96,
     97,
     98,
     99,
    100,
    101,
    102,
    103,
    104,
    105,
    106,
    107,
    108,
    109,
    110,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    120,
    121,
    122,
    123,
    124,
    125,
    126,
    127,
    128,
    129,
    130,
    131,
    132,
    133,
    134,
    135,
    136,
    137,
    138,
    139,
    140,
    141,
    142,
    143,
    144,
    145,
    146,
    147,
    148,
    149,
    150,
    151,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    163,
    164,
    165,
    166,
    167,
]

death_values = [
      1,
      2,
      2,
      1,
      3,
      4,
      8,
     10,
     11,
      8,
     10,
     23,
     23,
     16,
     12,
     28,
     33,
     24,
     21,
     28,
     18,
     23,
     21,
     13,
     18,
     15,
     17,
     12,
     15,
     10,
     11,
     19,
     14,
     21,
     10,
     16,
      3,
      7,
     12,
      6,
     12,
      9,
      9,
     15,
      7,
      6,
      4,
     14,
      1,
      5,
      6,
      2,
      8,
      4,
      5,
      3,
      8,
      4,
      2,
      6,
      3,
      5,
      2,
      5,
      9,
      6,
      5,
      2,
      2,
      9,
      2,
      1,
      7,
      3,
      1,
      1,
      1,
      1,
      1,
      4,
      2,
      1,
      3,
      2,
      1,
      3,
      1,
      1,
      1,
      1,
      1,
      4,
      1,
]

# notification data:
notification_times = [
     41,
     44,
     48,
     56,
     61,
     62,
     63,
     64,
     65,
     66,
     67,
     68,
     69,
     70,
     71,
     72,
     73,
     74,
     75,
     76,
     77,
     78,
     79,
     80,
     81,
     82,
     83,
     84,
     85,
     86,
     87,
     88,
     89,
     90,
     91,
     92,
     93,
     94,
     95,
     96,
     97,
     98,
     99,
    100,
    101,
    102,
    103,
    104,
    105,
    106,
    107,
    108,
    109,
    110,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    120,
    121,
    122,
    123,
    124,
    125,
    126,
    127,
    128,
    129,
    130,
    131,
    132,
    133,
    134,
    135,
    136,
    137,
    138,
    139,
    140,
    141,
    142,
    143,
    144,
    145,
    146,
    147,
    148,
    149,
    150,
    151,
    152,
    153,
    154,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    162,
    163,
    164,
    165,
    166,
    167,
    168,
    169,
    170,
    171,
]

notification_values = [
       1,
       1,
       1,
       1,
       3,
       2,
       2,
       5,
       9,
      17,
      10,
       8,
      19,
      31,
      39,
      52,
      50,
      76,
     100,
      98,
     110,
     103,
      94,
     125,
     126,
      99,
     180,
     155,
     160,
     194,
     138,
     147,
     168,
     108,
     133,
     144,
     161,
     152,
     128,
     136,
     163,
     185,
     138,
     201,
     182,
     172,
     142,
     123,
     107,
     117,
     173,
     109,
     141,
     130,
     144,
     176,
     144,
     114,
      68,
     133,
     102,
     159,
     195,
     131,
     100,
     106,
      90,
     133,
     152,
     165,
     165,
     105,
     123,
     151,
     132,
     176,
     145,
     107,
     128,
      98,
     192,
     159,
     245,
     249,
     283,
     507,
     309,
     215,
     194,
     117,
     230,
     205,
      74,
     259,
     129,
     232,
     176,
     212,
     116,
     244,
     282,
     245,
     166,
     172,
     199,
     162,
     331,
     271,
     254,
     190,
      12,
      12,
       5,
       6,
       2,
]

# ICU data:
icu_times = [
    146,
    147,
    148,
    149,
    150,
    151,
    152,
    153,
    154,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    162,
    163,
    164,
    165,
    166,
    167,
    168,
    169,
    170,
    171,
    172,
    173,
    174,
    175,
    176,
]

icu_values = [
     231,
     228,
     213,
     215,
     228,
     230,
     201,
     220,
     220,
     232,
     215,
     212,
     215,
     216,
     203,
     206,
     217,
     213,
     205,
     214,
     204,
     217,
     222,
     221,
     211,
     213,
     211,
     227,
     244,
     230,
     243,
]

TARGET_OUTPUTS = [
    {
        "output_key": "infection_deathsXall",
        "years": death_times,
        "values": death_values,
        "loglikelihood_distri": "negative_binomial",
    },
    {
        "output_key": "notifications",
        "years": notification_times,
        "values": notification_values,
        "loglikelihood_distri": "negative_binomial",
    },
    {
        "output_key": "prevXlateXclinical_icuXamong",
        "years": icu_times,
        "values": icu_values,
        "loglikelihood_distri": "negative_binomial",
    },
]
